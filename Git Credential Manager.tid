created: 20220116182103531
creator: aleer
modified: 20220116220609801
modifier: aleer
title: Git Credential Manager
type: text/vnd.tiddlywiki

[[link|https://github.com/microsoft/Git-Credential-Manager-Core]]

[[Git Credential Manager|https://github.com/GitCredentialManager/git-credential-manager]] (GCM) is a secure Git [[credential helper|Credential Helper]] built on [[.NET|https://dotnet.microsoft.com/]] that runs on Windows, macOS, and Linux.

Compared to Git's built-in credential helpers (Windows: wincred, macOS: osxkeychain, Linux: gnome-keyring/libsecret) which provides single-factor authentication suport working on any HTTP-enabled Git repository, GCM provides multi-factor authentication support for [[Azure DevOps|https://dev.azure.com/]], Azure DevOps Server (formerly Team Foundation Server), GitHub, and Bitbucket.

Git Credential Manager (CGM) replaces the .NET Framework-based [[Git Credential MAanger for Windows (GCM)|https://github.com/microsoft/Git-Credential-Manager-for-Windows]], and the Java-based [[Git Credential Manager for Mac and Linux|https://github.com/microsoft/Git-Credential-Manager-for-Mac-and-Linux]] (Java GCM), providing a consistent authentication experience across all platforms.

!Current Status

Git Credential Manager is currently available for Windows, macOS, and Linux.  GCM only works with HTTP(S) remotes; you can still use Git with SSH:

*[[Azure DevOps SSH]]
*[[GitHub SSH]]
*[[Bitbucket SSH]]

|!Feature |!Windows |!macOS |!Linux |
|Installer / Uninstaller | x | x | x* |
|Secure platform credential storage | x<br/>[[(see more)|https://github.com/GitCredentialManager/git-credential-manager/blob/main/docs/credstores.md]] | x<br/>[[(seem more)|https://github.com/GitCredentialManager/git-credential-manager/blob/main/docs/credstores.md]] | x<br/>[[(see more)|https://github.com/GitCredentialManager/git-credential-manager/blob/main/docs/credstores.md]] |
|Multi-factor authentication | x | x | x |
|Two-factor authentication support for GitHub | x | x | x |
|Two-factor authentication support for Bitbucket | x | x | x |
|Windows Integrated Authentication (NTLM/Kerberos) support | x | //N/A// | //N/A// |
|Basic HTTP authentication support | x | x | x |
|Proxy support | x | x | x |
|`amd64` support | x | x | x |
|`x86` support | x | //N/A// | No |
|`arm64` support | best effort | via Rosetta 2 | best effort, no packages |
|`armhf` support | //N/A// | //N/A// | best effort, no packages |

(*) Fedora packages planned but not available yet.

!Download and Install

!!macOS Homebrew

The preferred installation mechanism is using Homebrew; we offer a Cask in our custom Tap.

To install, run the following:

```
brew tap microsoft/git
brew install --cask git-credential-manager-core
```

After installing you can stay up-to-date with new releases by running:

```
brew upgrade git-credential-manager-core
```

!!!Git Credential Manager for Mac and Linux (Java-based CGM)

If you have an existing installation of the 'Java CGM' on macOS and you have installed this using Homebrew, this installation will be unlinked (`brew unlink git-credential-manager`) when GCM is installed.

!!!Uninstall

To uninstall, run the following:

```
brew uninstall --cask git-credential-manager-core
```

!!macOS Package

!!!Install 

We also provide a [[.pkg installer]] with each release.  To install, double-click the installation package and follow the instructions presented.

!!!Uninstall

To uninstall, run the following:

```
sudo /usr/local/share/gcm-core/uninstall.sh
```

!!!Linux
!!!!Ubuntu/Debian distributions

!!!!!Install
Download the latest [[.deb package|https://github.com/GitCredentialManager/git-credential-manager/releases/latest]], and run the following:

```
sudo dpkg -i <path-to-package>
git-credential-manager-core configure
```

>''NOTE:'' Although packages were previously offered on certain [[Microsoft Ubuntu package feeds|https://packages.microsoft.com/repos/]], GCM no longer publishes to these repositories.  Please install the Debian package using the above instructions instead.

!!!!!Uninstall

```
git-credential-manager-core unconfigure
sudo dpkg -r gcmcore
```

!!!!Other distributions

!!!!!Install

Download the latest [[tarball|https://github.com/GitCredentialManager/git-credential-manager/releases/latest]], and run the following:

```
tar -xvf <path-to-tarball> -C /usr/local/bin/git-credential-manager-core configure
```
!!!!!Uninstall:

```
git-credential-manager-core unconfigure
rm $(command -v git-credential-manager-core)
```

>''NOTE:'' All Linux distributions [[require additional configuration|https://aka.ms/gcm/credstores]] to use GCM.

---

!!Windows 

GCM is included with [[Git for Windows| https://gitforwindows.org/]], and the latest version is included in each new Git for Windows release.  This is the preferred way to install GVM on Windows.  During installation you will be asked to select a credential helper, with GCM being set as the default.

{{cred_hlpr_wininstaller.png}}

!!!Standalone Installation
!!!!Install

You can also download the [[latest installer|https://github.com/GitCredentialManager/git-credential-manager/releases/latest]] for Windows to install GCM standalone.

>''Important:'' Installing GCM as a standalone package on Windows will forcibly override the version of GCM that is bundled with Git for Windows with a later version.  

There are two flavors of standalone installation on Windows:

*User (preferred) (`gcmcoreuser-win*`):<br/><br/>Does not require administrator rights.  Will install for all users on the system and update the system-wide Git configuration.<br/><br/>
*System (`gcmcore-win*`)<br/><br/>Requires administrator rights.  Will install for all users on the system and update the system-wide Git configuration.

To install, double-click the desired installation package and follow the instructions presented.

!!!!Uninstall (Windows 10)

To uninstall, open the Settings app and navigate to the Apps section.  Select `Git Credential Manager` and click `Uninstall`.

!!!!Uninstall (Windows 7-8.1)

To uninstall, open Control Panel and navigate to the `Programs and Features` screen.  Select `Git Credential Manager` and click `Remove`.

!!Windows Subsystem for Linux (WSL)

Git Credential Manager can be used with the [[Windows Subsystem for Linux (WSL)|https://aka.ms/wsl]] to enable secure authentication of your remote Git repositories from inside of WSL.

Please see [[these docs|Git Credential Manager - Windows Subsystem for Linux]] for more information.

!Supported Git Versions

[[Git Credential Manager]] tries to be compatible with the broadest set of Git versions (within reason).  However there are some known problematic releases of Git that are not compatible.

*Git 1.x<br/><br/>The initial major version of Git is not supported or tested with GCM.<br/><br/>
*Git 2.26.2<br/><br/>This version of Git introduced a breaking change with the parsing credential configuration that GCM relies on.  This issue was fixed in commit `12294990` of the Git project, and released in Git 2.27.0.

!How to use

Once it's installed and configured, [[Git Credential Manager]] is called implicitly by Git.  You don't have to do anything special, and GCM isn't intended to be called directly by the user.  For example, when pushing (`git push`) to [[Azure DevOps|https://dev.azure.com/]], [[Bitbucket|https://bitbucket.org/]], or [[GitHub|https://github.com/]], a window will automatically open and walk you through the sign-in process.  (This process will look slightly different on each Git host, and even in some cases, whether you've connected to an on-premises or cloud hosted Git host.)  Later Git commands in some repository will re-use existing credentials or tokens that GCM has stored for as long as they're valid.